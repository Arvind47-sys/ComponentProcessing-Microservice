// <auto-generated />
using System;
using Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComponentProcessing_Microservice.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("Api.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("Api.Entities.ProcessRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppUserId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ContactNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DefectiveComponentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DefectiveComponentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("ProcessRequest");
                });

            modelBuilder.Entity("Api.Entities.ProcessResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("TEXT");

                    b.Property<double>("PackagingAndDeliveryCharge")
                        .HasColumnType("REAL");

                    b.Property<int?>("ProcessRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ProcessingCharge")
                        .HasColumnType("REAL");

                    b.Property<int>("RequestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ProcessRequestId");

                    b.ToTable("ProcessResponse");
                });

            modelBuilder.Entity("Api.Entities.ProcessRequest", b =>
                {
                    b.HasOne("Api.Entities.AppUser", "AppUser")
                        .WithMany("ProcessRequests")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Api.Entities.ProcessResponse", b =>
                {
                    b.HasOne("Api.Entities.AppUser", "AppUser")
                        .WithMany("ProcessResponses")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Entities.ProcessRequest", "ProcessRequest")
                        .WithMany()
                        .HasForeignKey("ProcessRequestId");

                    b.Navigation("AppUser");

                    b.Navigation("ProcessRequest");
                });

            modelBuilder.Entity("Api.Entities.AppUser", b =>
                {
                    b.Navigation("ProcessRequests");

                    b.Navigation("ProcessResponses");
                });
#pragma warning restore 612, 618
        }
    }
}
